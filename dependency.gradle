//This file is generated to unified dependency management in different modules of project.
ext {
    versions = [
            "kotlin_version"    : "1.3.72",
            "androidx_core"     : "1.7.0",
            "appcompat"         : "1.4.2",
            "material"          : "1.6.1",
            "constraintlayout"  : "2.1.2",
            "junit"             : "4.+",
            "androidx_test"     : "1.1.3",
            "esspreso"          : "3.4.0",
            "room"              : "2.4.2",
            "hilt"              : "2.38.1",
            "nav_version"       : "2.5.0",
            "androidx_lifecycle": "2.0.0",
            "coroutine"         : "1.3.9",
            "paging"            : "3.1.1",
            "recycler_view"     : "1.2.1",
            "dagger"            : "2.+",
            "room_paging"       : "2.5.0-alpha02",
    ]
    commonDep = new DependencyList()
            .add(new DependencyItem("org.jetbrains.kotlin:kotlin-stdlib", versions["kotlin_version"]))
            .add(new DependencyItem("org.jetbrains.kotlinx:kotlinx-coroutines-android", versions["coroutine"]))
            .add(new DependencyItem("com.google.dagger:dagger", versions["dagger"]))
            .add(new DependencyItem("androidx.paging:paging-common-ktx", versions["paging"]))
            .add(new DependencyItem(DependencyType.ANNOTATION_PROCESSOR, "com.google.dagger:dagger-compiler", versions["dagger"]))


    appDep = new DependencyList(commonDep)
            .add(new DependencyItem("androidx.core:core-ktx", versions["androidx_core"]))
            .add(new DependencyItem("androidx.appcompat:appcompat", versions["appcompat"]))
//            .add(new DependencyItem("com.google.android.material", versions["material"]))
            .add(new DependencyItem("androidx.constraintlayout:constraintlayout", versions["constraintlayout"]))
            .add(new DependencyItem("androidx.lifecycle:lifecycle-extensions", versions["androidx_lifecycle"]))
            .add(new DependencyItem("androidx.navigation:navigation-fragment-ktx", versions["nav_version"]))
            .add(new DependencyItem("androidx.navigation:navigation-ui-ktx", versions["nav_version"]))
            .add(new DependencyItem("androidx.recyclerview:recyclerview", versions["recycler_view"]))
            .add(new DependencyItem("com.google.dagger:hilt-android", versions["hilt"]))
            .add(new DependencyItem("androidx.paging:paging-runtime", versions["paging"]))
            .add(new DependencyItem(DependencyType.KAPT, "com.google.dagger:hilt-compiler", versions["hilt"]))
            .add(new DependencyItem(DependencyType.TEST, "junit:junit", versions["junit"]))
            .add(new DependencyItem(DependencyType.ANDROID_TEST, "androidx.test.ext:junit", versions["androidx_test"]))
            .add(new DependencyItem(DependencyType.ANDROID_TEST, "androidx.test.espresso:espresso-core", versions["esspreso"]))
            .add(new DependencyItem("androidx.room:room-ktx", versions["room"]))
            .add(new DependencyItem(DependencyType.KAPT, "androidx.room:room-compiler", versions["room"]))


    dataDep = new DependencyList(commonDep)
            .add(new DependencyItem("androidx.room:room-ktx", versions["room"]))
            .add(new DependencyItem("androidx.room:room-runtime", versions["room"]))
            .add(new DependencyItem("androidx.paging:paging-common-ktx", versions["paging"]))
            .add(new DependencyItem("androidx.room:room-paging", versions["room"]))
            .add(new DependencyItem(DependencyType.KAPT, "androidx.room:room-compiler", versions["room"]))

    domainDep = new DependencyList(commonDep)
}

class DependencyList {
    List<DependencyItem> dependencies = new ArrayList<>();

    DependencyList add(DependencyItem item) {
        dependencies.add(item)
        return this
    }

    DependencyList(DependencyList depList) {
        if (depList != null)
            this.dependencies = new ArrayList<>(depList.dependencies)
    }
}

class DependencyItem {
    DependencyType type
    String name
    String version

    DependencyItem(String name, String version) {
        this.type = DependencyType.IMPLEMENTATION
        this.name = name
        this.version = version
    }

    DependencyItem(DependencyType type, String name, String version) {
        this.type = type
        this.name = name
        this.version = version
    }

    @Override
    String toString() {
        return name + ":$version"
    }
}

enum DependencyType {
    IMPLEMENTATION("implementation"),
    TEST("testImplementation"),
    ANDROID_TEST("androidTestImplementation"),
    KAPT("kapt"),
    ANNOTATION_PROCESSOR("annotationProcessor");

    DependencyType(String value) {
        this.value = value
    }
    String value;

    @Override
    String toString() {
        return value
    }
}